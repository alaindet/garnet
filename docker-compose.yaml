version: '3.8'

services:

  # php:
  #   build:
  #     context: .
  #     dockerfile: ./docker/php.dockerfile
  #   env_file:
  #     - ./environment/php.env
  #   ports:
  #     - '8080:80'
  #   volumes:
  #     - ./backend:/var/www/html
  #     - /var/www/html/src/vendor

  # composer:
  #   build:
  #     context: .
  #     dockerfile: ./docker/composer.dockerfile
  #   volumes:
  #     - ./backend/src:/home/composer/app

  # mariadb:
  #   image: mariadb:10.6
  #   working_dir: /application
  #   volumes:
  #     - db_data:/var/lib/mysql
  #   env_file:
  #     - ./environment/mariadb.env
  #   ports:
  #     - '3306:3306'

  node:
    build:
      context: .
      dockerfile: ./docker/node.dockerfile
      target: development
    env_file:
      - ./environment/node.env
    volumes:
      - ./backend/src:/home/node/app/src
      - ./backend/nodemon.json:/home/node/app/nodemon.json
    ports:
      - '3001:3001'
    depends_on:
      - mariadb
    command: npm run dev

  postgres:
    image: postgres:14.1
    volumes:
      - database-data:/var/lib/postgresql/data
    env_file:
      - ./environment/postgres.env
    ports:
      - '5432:5432'


  # Utility
  adminer:
    image: adminer:4.8.1
    ports:
      - '8081:8080'
    depends_on:
      - postgres

  # Utility
  pgadmin:
    image: dpage/pgadmin4
    volumes:
      - pgadmin-settings:/var/lib/pgadmin
      - ./database/backup:/var/lib/pgadmin/storage/garnet/backup
    env_file:
      - ./environment/pgadmin.env
    ports:
      - '5050:80'

  # mailhog: TODO

volumes:
  database-data: {}
  pgadmin-settings: {}
  pgadmin-backup: {}
